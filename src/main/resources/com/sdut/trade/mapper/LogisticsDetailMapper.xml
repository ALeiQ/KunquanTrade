<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdut.trade.mapper.LogisticsDetailMapper">
  <resultMap id="BaseResultMap" type="com.sdut.trade.entity.LogisticsDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="load_time" jdbcType="DATE" property="loadTime" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_model" jdbcType="VARCHAR" property="goodsModel" />
    <result column="net_weight" jdbcType="DOUBLE" property="netWeight" />
    <result column="return_weight" jdbcType="DOUBLE" property="returnWeight" />
    <result column="loss_weight" jdbcType="DOUBLE" property="lossWeight" />
    <result column="goods_from" jdbcType="VARCHAR" property="goodsFrom" />
    <result column="seller_unit_price" jdbcType="DOUBLE" property="sellerUnitPrice" />
    <result column="seller_sum_price" jdbcType="DOUBLE" property="sellerSumPrice" />
    <result column="buyer_company" jdbcType="VARCHAR" property="buyerCompany" />
    <result column="unit_price" jdbcType="DOUBLE" property="unitPrice" />
    <result column="sum_price" jdbcType="DOUBLE" property="sumPrice" />
    <result column="trans_company" jdbcType="VARCHAR" property="transCompany" />
    <result column="trans_unit_price" jdbcType="DOUBLE" property="transUnitPrice" />
    <result column="trans_sum_price" jdbcType="DOUBLE" property="transSumPrice" />
    <result column="profit" jdbcType="DOUBLE" property="profit" />
    <result column="weighing_number" jdbcType="VARCHAR" property="weighingNumber" />
    <result column="car_number" jdbcType="VARCHAR" property="carNumber" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="delete_date" jdbcType="TIMESTAMP" property="deleteDate" />
    <result column="enable" jdbcType="BIT" property="enable" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, load_time, goods_name, goods_model, net_weight, return_weight, loss_weight, goods_from, 
    seller_unit_price, seller_sum_price, buyer_company, unit_price, sum_price, trans_company, 
    trans_unit_price, trans_sum_price, profit, weighing_number, car_number, remark, create_date, 
    delete_date, enable
  </sql>
  <select id="selectByExample" parameterType="com.sdut.trade.entity.LogisticsDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from logistics_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from logistics_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from logistics_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sdut.trade.entity.LogisticsDetailExample">
    delete from logistics_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sdut.trade.entity.LogisticsDetail">
    insert into logistics_detail (id, load_time, goods_name, 
      goods_model, net_weight, return_weight, 
      loss_weight, goods_from, seller_unit_price, 
      seller_sum_price, buyer_company, unit_price, 
      sum_price, trans_company, trans_unit_price, 
      trans_sum_price, profit, weighing_number, 
      car_number, remark, create_date, 
      delete_date, enable)
    values (#{id,jdbcType=INTEGER}, #{loadTime,jdbcType=DATE}, #{goodsName,jdbcType=VARCHAR}, 
      #{goodsModel,jdbcType=VARCHAR}, #{netWeight,jdbcType=DOUBLE}, #{returnWeight,jdbcType=DOUBLE}, 
      #{lossWeight,jdbcType=DOUBLE}, #{goodsFrom,jdbcType=VARCHAR}, #{sellerUnitPrice,jdbcType=DOUBLE}, 
      #{sellerSumPrice,jdbcType=DOUBLE}, #{buyerCompany,jdbcType=VARCHAR}, #{unitPrice,jdbcType=DOUBLE}, 
      #{sumPrice,jdbcType=DOUBLE}, #{transCompany,jdbcType=VARCHAR}, #{transUnitPrice,jdbcType=DOUBLE}, 
      #{transSumPrice,jdbcType=DOUBLE}, #{profit,jdbcType=DOUBLE}, #{weighingNumber,jdbcType=VARCHAR}, 
      #{carNumber,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{deleteDate,jdbcType=TIMESTAMP}, #{enable,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.sdut.trade.entity.LogisticsDetail">
    insert into logistics_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loadTime != null">
        load_time,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsModel != null">
        goods_model,
      </if>
      <if test="netWeight != null">
        net_weight,
      </if>
      <if test="returnWeight != null">
        return_weight,
      </if>
      <if test="lossWeight != null">
        loss_weight,
      </if>
      <if test="goodsFrom != null">
        goods_from,
      </if>
      <if test="sellerUnitPrice != null">
        seller_unit_price,
      </if>
      <if test="sellerSumPrice != null">
        seller_sum_price,
      </if>
      <if test="buyerCompany != null">
        buyer_company,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="sumPrice != null">
        sum_price,
      </if>
      <if test="transCompany != null">
        trans_company,
      </if>
      <if test="transUnitPrice != null">
        trans_unit_price,
      </if>
      <if test="transSumPrice != null">
        trans_sum_price,
      </if>
      <if test="profit != null">
        profit,
      </if>
      <if test="weighingNumber != null">
        weighing_number,
      </if>
      <if test="carNumber != null">
        car_number,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="deleteDate != null">
        delete_date,
      </if>
      <if test="enable != null">
        enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loadTime != null">
        #{loadTime,jdbcType=DATE},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsModel != null">
        #{goodsModel,jdbcType=VARCHAR},
      </if>
      <if test="netWeight != null">
        #{netWeight,jdbcType=DOUBLE},
      </if>
      <if test="returnWeight != null">
        #{returnWeight,jdbcType=DOUBLE},
      </if>
      <if test="lossWeight != null">
        #{lossWeight,jdbcType=DOUBLE},
      </if>
      <if test="goodsFrom != null">
        #{goodsFrom,jdbcType=VARCHAR},
      </if>
      <if test="sellerUnitPrice != null">
        #{sellerUnitPrice,jdbcType=DOUBLE},
      </if>
      <if test="sellerSumPrice != null">
        #{sellerSumPrice,jdbcType=DOUBLE},
      </if>
      <if test="buyerCompany != null">
        #{buyerCompany,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="sumPrice != null">
        #{sumPrice,jdbcType=DOUBLE},
      </if>
      <if test="transCompany != null">
        #{transCompany,jdbcType=VARCHAR},
      </if>
      <if test="transUnitPrice != null">
        #{transUnitPrice,jdbcType=DOUBLE},
      </if>
      <if test="transSumPrice != null">
        #{transSumPrice,jdbcType=DOUBLE},
      </if>
      <if test="profit != null">
        #{profit,jdbcType=DOUBLE},
      </if>
      <if test="weighingNumber != null">
        #{weighingNumber,jdbcType=VARCHAR},
      </if>
      <if test="carNumber != null">
        #{carNumber,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteDate != null">
        #{deleteDate,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sdut.trade.entity.LogisticsDetailExample" resultType="java.lang.Long">
    select count(*) from logistics_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update logistics_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loadTime != null">
        load_time = #{record.loadTime,jdbcType=DATE},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsModel != null">
        goods_model = #{record.goodsModel,jdbcType=VARCHAR},
      </if>
      <if test="record.netWeight != null">
        net_weight = #{record.netWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.returnWeight != null">
        return_weight = #{record.returnWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.lossWeight != null">
        loss_weight = #{record.lossWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.goodsFrom != null">
        goods_from = #{record.goodsFrom,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerUnitPrice != null">
        seller_unit_price = #{record.sellerUnitPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.sellerSumPrice != null">
        seller_sum_price = #{record.sellerSumPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.buyerCompany != null">
        buyer_company = #{record.buyerCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.sumPrice != null">
        sum_price = #{record.sumPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.transCompany != null">
        trans_company = #{record.transCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.transUnitPrice != null">
        trans_unit_price = #{record.transUnitPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.transSumPrice != null">
        trans_sum_price = #{record.transSumPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.profit != null">
        profit = #{record.profit,jdbcType=DOUBLE},
      </if>
      <if test="record.weighingNumber != null">
        weighing_number = #{record.weighingNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.carNumber != null">
        car_number = #{record.carNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteDate != null">
        delete_date = #{record.deleteDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enable != null">
        enable = #{record.enable,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update logistics_detail
    set id = #{record.id,jdbcType=INTEGER},
      load_time = #{record.loadTime,jdbcType=DATE},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_model = #{record.goodsModel,jdbcType=VARCHAR},
      net_weight = #{record.netWeight,jdbcType=DOUBLE},
      return_weight = #{record.returnWeight,jdbcType=DOUBLE},
      loss_weight = #{record.lossWeight,jdbcType=DOUBLE},
      goods_from = #{record.goodsFrom,jdbcType=VARCHAR},
      seller_unit_price = #{record.sellerUnitPrice,jdbcType=DOUBLE},
      seller_sum_price = #{record.sellerSumPrice,jdbcType=DOUBLE},
      buyer_company = #{record.buyerCompany,jdbcType=VARCHAR},
      unit_price = #{record.unitPrice,jdbcType=DOUBLE},
      sum_price = #{record.sumPrice,jdbcType=DOUBLE},
      trans_company = #{record.transCompany,jdbcType=VARCHAR},
      trans_unit_price = #{record.transUnitPrice,jdbcType=DOUBLE},
      trans_sum_price = #{record.transSumPrice,jdbcType=DOUBLE},
      profit = #{record.profit,jdbcType=DOUBLE},
      weighing_number = #{record.weighingNumber,jdbcType=VARCHAR},
      car_number = #{record.carNumber,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      delete_date = #{record.deleteDate,jdbcType=TIMESTAMP},
      enable = #{record.enable,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sdut.trade.entity.LogisticsDetail">
    update logistics_detail
    <set>
      <if test="loadTime != null">
        load_time = #{loadTime,jdbcType=DATE},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsModel != null">
        goods_model = #{goodsModel,jdbcType=VARCHAR},
      </if>
      <if test="netWeight != null">
        net_weight = #{netWeight,jdbcType=DOUBLE},
      </if>
      <if test="returnWeight != null">
        return_weight = #{returnWeight,jdbcType=DOUBLE},
      </if>
      <if test="lossWeight != null">
        loss_weight = #{lossWeight,jdbcType=DOUBLE},
      </if>
      <if test="goodsFrom != null">
        goods_from = #{goodsFrom,jdbcType=VARCHAR},
      </if>
      <if test="sellerUnitPrice != null">
        seller_unit_price = #{sellerUnitPrice,jdbcType=DOUBLE},
      </if>
      <if test="sellerSumPrice != null">
        seller_sum_price = #{sellerSumPrice,jdbcType=DOUBLE},
      </if>
      <if test="buyerCompany != null">
        buyer_company = #{buyerCompany,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="sumPrice != null">
        sum_price = #{sumPrice,jdbcType=DOUBLE},
      </if>
      <if test="transCompany != null">
        trans_company = #{transCompany,jdbcType=VARCHAR},
      </if>
      <if test="transUnitPrice != null">
        trans_unit_price = #{transUnitPrice,jdbcType=DOUBLE},
      </if>
      <if test="transSumPrice != null">
        trans_sum_price = #{transSumPrice,jdbcType=DOUBLE},
      </if>
      <if test="profit != null">
        profit = #{profit,jdbcType=DOUBLE},
      </if>
      <if test="weighingNumber != null">
        weighing_number = #{weighingNumber,jdbcType=VARCHAR},
      </if>
      <if test="carNumber != null">
        car_number = #{carNumber,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteDate != null">
        delete_date = #{deleteDate,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sdut.trade.entity.LogisticsDetail">
    update logistics_detail
    set load_time = #{loadTime,jdbcType=DATE},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_model = #{goodsModel,jdbcType=VARCHAR},
      net_weight = #{netWeight,jdbcType=DOUBLE},
      return_weight = #{returnWeight,jdbcType=DOUBLE},
      loss_weight = #{lossWeight,jdbcType=DOUBLE},
      goods_from = #{goodsFrom,jdbcType=VARCHAR},
      seller_unit_price = #{sellerUnitPrice,jdbcType=DOUBLE},
      seller_sum_price = #{sellerSumPrice,jdbcType=DOUBLE},
      buyer_company = #{buyerCompany,jdbcType=VARCHAR},
      unit_price = #{unitPrice,jdbcType=DOUBLE},
      sum_price = #{sumPrice,jdbcType=DOUBLE},
      trans_company = #{transCompany,jdbcType=VARCHAR},
      trans_unit_price = #{transUnitPrice,jdbcType=DOUBLE},
      trans_sum_price = #{transSumPrice,jdbcType=DOUBLE},
      profit = #{profit,jdbcType=DOUBLE},
      weighing_number = #{weighingNumber,jdbcType=VARCHAR},
      car_number = #{carNumber,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      delete_date = #{deleteDate,jdbcType=TIMESTAMP},
      enable = #{enable,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into logistics_detail
    (id, load_time, goods_name, goods_model, net_weight, return_weight, loss_weight, 
      goods_from, seller_unit_price, seller_sum_price, buyer_company, unit_price, sum_price, 
      trans_company, trans_unit_price, trans_sum_price, profit, weighing_number, car_number, 
      remark, create_date, delete_date, enable)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.loadTime,jdbcType=DATE}, #{item.goodsName,jdbcType=VARCHAR}, 
        #{item.goodsModel,jdbcType=VARCHAR}, #{item.netWeight,jdbcType=DOUBLE}, #{item.returnWeight,jdbcType=DOUBLE}, 
        #{item.lossWeight,jdbcType=DOUBLE}, #{item.goodsFrom,jdbcType=VARCHAR}, #{item.sellerUnitPrice,jdbcType=DOUBLE}, 
        #{item.sellerSumPrice,jdbcType=DOUBLE}, #{item.buyerCompany,jdbcType=VARCHAR}, 
        #{item.unitPrice,jdbcType=DOUBLE}, #{item.sumPrice,jdbcType=DOUBLE}, #{item.transCompany,jdbcType=VARCHAR}, 
        #{item.transUnitPrice,jdbcType=DOUBLE}, #{item.transSumPrice,jdbcType=DOUBLE}, 
        #{item.profit,jdbcType=DOUBLE}, #{item.weighingNumber,jdbcType=VARCHAR}, #{item.carNumber,jdbcType=VARCHAR}, 
        #{item.remark,jdbcType=VARCHAR}, #{item.createDate,jdbcType=TIMESTAMP}, #{item.deleteDate,jdbcType=TIMESTAMP}, 
        #{item.enable,jdbcType=BIT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into logistics_detail (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id' == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'load_time' == column.value">
          #{item.loadTime,jdbcType=DATE}
        </if>
        <if test="'goods_name' == column.value">
          #{item.goodsName,jdbcType=VARCHAR}
        </if>
        <if test="'goods_model' == column.value">
          #{item.goodsModel,jdbcType=VARCHAR}
        </if>
        <if test="'net_weight' == column.value">
          #{item.netWeight,jdbcType=DOUBLE}
        </if>
        <if test="'return_weight' == column.value">
          #{item.returnWeight,jdbcType=DOUBLE}
        </if>
        <if test="'loss_weight' == column.value">
          #{item.lossWeight,jdbcType=DOUBLE}
        </if>
        <if test="'goods_from' == column.value">
          #{item.goodsFrom,jdbcType=VARCHAR}
        </if>
        <if test="'seller_unit_price' == column.value">
          #{item.sellerUnitPrice,jdbcType=DOUBLE}
        </if>
        <if test="'seller_sum_price' == column.value">
          #{item.sellerSumPrice,jdbcType=DOUBLE}
        </if>
        <if test="'buyer_company' == column.value">
          #{item.buyerCompany,jdbcType=VARCHAR}
        </if>
        <if test="'unit_price' == column.value">
          #{item.unitPrice,jdbcType=DOUBLE}
        </if>
        <if test="'sum_price' == column.value">
          #{item.sumPrice,jdbcType=DOUBLE}
        </if>
        <if test="'trans_company' == column.value">
          #{item.transCompany,jdbcType=VARCHAR}
        </if>
        <if test="'trans_unit_price' == column.value">
          #{item.transUnitPrice,jdbcType=DOUBLE}
        </if>
        <if test="'trans_sum_price' == column.value">
          #{item.transSumPrice,jdbcType=DOUBLE}
        </if>
        <if test="'profit' == column.value">
          #{item.profit,jdbcType=DOUBLE}
        </if>
        <if test="'weighing_number' == column.value">
          #{item.weighingNumber,jdbcType=VARCHAR}
        </if>
        <if test="'car_number' == column.value">
          #{item.carNumber,jdbcType=VARCHAR}
        </if>
        <if test="'remark' == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
        <if test="'create_date' == column.value">
          #{item.createDate,jdbcType=TIMESTAMP}
        </if>
        <if test="'delete_date' == column.value">
          #{item.deleteDate,jdbcType=TIMESTAMP}
        </if>
        <if test="'enable' == column.value">
          #{item.enable,jdbcType=BIT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>
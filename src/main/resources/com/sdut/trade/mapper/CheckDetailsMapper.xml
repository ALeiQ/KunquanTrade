<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sdut.trade.mapper.CheckDetailsMapper" >
  <resultMap id="BaseResultMap" type="com.sdut.trade.entity.CheckDetails" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="unit_price" property="unitPrice" jdbcType="REAL" />
    <result column="sum_pricet" property="sumPricet" jdbcType="REAL" />
    <result column="tax" property="tax" jdbcType="REAL" />
    <result column="check_id" property="checkId" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="delete_date" property="deleteDate" jdbcType="TIMESTAMP" />
    <result column="enable" property="enable" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, number, unit_price, sum_pricet, tax, check_id, create_date, delete_date, enable
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sdut.trade.entity.CheckDetailsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from check_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from check_details
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from check_details
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sdut.trade.entity.CheckDetailsExample" >
    delete from check_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sdut.trade.entity.CheckDetails" >
    insert into check_details (id, number, unit_price, 
      sum_pricet, tax, check_id, 
      create_date, delete_date, enable
      )
    values (#{id,jdbcType=INTEGER}, #{number,jdbcType=INTEGER}, #{unitPrice,jdbcType=REAL}, 
      #{sumPricet,jdbcType=REAL}, #{tax,jdbcType=REAL}, #{checkId,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{deleteDate,jdbcType=TIMESTAMP}, #{enable,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sdut.trade.entity.CheckDetails" >
    insert into check_details
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="unitPrice != null" >
        unit_price,
      </if>
      <if test="sumPricet != null" >
        sum_pricet,
      </if>
      <if test="tax != null" >
        tax,
      </if>
      <if test="checkId != null" >
        check_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="deleteDate != null" >
        delete_date,
      </if>
      <if test="enable != null" >
        enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null" >
        #{unitPrice,jdbcType=REAL},
      </if>
      <if test="sumPricet != null" >
        #{sumPricet,jdbcType=REAL},
      </if>
      <if test="tax != null" >
        #{tax,jdbcType=REAL},
      </if>
      <if test="checkId != null" >
        #{checkId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteDate != null" >
        #{deleteDate,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sdut.trade.entity.CheckDetailsExample" resultType="java.lang.Integer" >
    select count(*) from check_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update check_details
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.unitPrice != null" >
        unit_price = #{record.unitPrice,jdbcType=REAL},
      </if>
      <if test="record.sumPricet != null" >
        sum_pricet = #{record.sumPricet,jdbcType=REAL},
      </if>
      <if test="record.tax != null" >
        tax = #{record.tax,jdbcType=REAL},
      </if>
      <if test="record.checkId != null" >
        check_id = #{record.checkId,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteDate != null" >
        delete_date = #{record.deleteDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enable != null" >
        enable = #{record.enable,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update check_details
    set id = #{record.id,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      unit_price = #{record.unitPrice,jdbcType=REAL},
      sum_pricet = #{record.sumPricet,jdbcType=REAL},
      tax = #{record.tax,jdbcType=REAL},
      check_id = #{record.checkId,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      delete_date = #{record.deleteDate,jdbcType=TIMESTAMP},
      enable = #{record.enable,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sdut.trade.entity.CheckDetails" >
    update check_details
    <set >
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null" >
        unit_price = #{unitPrice,jdbcType=REAL},
      </if>
      <if test="sumPricet != null" >
        sum_pricet = #{sumPricet,jdbcType=REAL},
      </if>
      <if test="tax != null" >
        tax = #{tax,jdbcType=REAL},
      </if>
      <if test="checkId != null" >
        check_id = #{checkId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteDate != null" >
        delete_date = #{deleteDate,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sdut.trade.entity.CheckDetails" >
    update check_details
    set number = #{number,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=REAL},
      sum_pricet = #{sumPricet,jdbcType=REAL},
      tax = #{tax,jdbcType=REAL},
      check_id = #{checkId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      delete_date = #{deleteDate,jdbcType=TIMESTAMP},
      enable = #{enable,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>